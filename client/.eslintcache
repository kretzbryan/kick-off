[{"/Users/JohnnyTemp/Documents/kick-off/client/src/index.js":"1","/Users/JohnnyTemp/Documents/kick-off/client/src/App.js":"2","/Users/JohnnyTemp/Documents/kick-off/client/src/components/RoomChat.js":"3","/Users/JohnnyTemp/Documents/kick-off/client/src/components/NavBar.js":"4","/Users/JohnnyTemp/Documents/kick-off/client/src/components/Homepage.js":"5","/Users/JohnnyTemp/Documents/kick-off/client/src/context/UserContext.js":"6","/Users/JohnnyTemp/Documents/kick-off/client/src/components/CreateProfile.js":"7","/Users/JohnnyTemp/Documents/kick-off/client/src/components/ProfileForm.js":"8","/Users/JohnnyTemp/Documents/kick-off/client/src/utils/api.js":"9","/Users/JohnnyTemp/Documents/kick-off/client/src/components/panels/KickoffPanel.js":"10","/Users/JohnnyTemp/Documents/kick-off/client/src/components/links/KickOffLink.js":"11","/Users/JohnnyTemp/Documents/kick-off/client/src/components/KickoffHub.js":"12"},{"size":219,"mtime":1607977488053,"results":"13","hashOfConfig":"14"},{"size":2293,"mtime":1608146052412,"results":"15","hashOfConfig":"14"},{"size":1011,"mtime":1608141900507,"results":"16","hashOfConfig":"14"},{"size":1140,"mtime":1608145963347,"results":"17","hashOfConfig":"14"},{"size":3333,"mtime":1608145832411,"results":"18","hashOfConfig":"14"},{"size":257,"mtime":1608077835189,"results":"19","hashOfConfig":"14"},{"size":458,"mtime":1608101763982,"results":"20","hashOfConfig":"14"},{"size":3948,"mtime":1608141466830,"results":"21","hashOfConfig":"14"},{"size":977,"mtime":1608101763985,"results":"22","hashOfConfig":"14"},{"size":1625,"mtime":1608141193188,"results":"23","hashOfConfig":"14"},{"size":176,"mtime":1608141007287,"results":"24","hashOfConfig":"14"},{"size":2012,"mtime":1608146150087,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bhshu3",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/JohnnyTemp/Documents/kick-off/client/src/index.js",[],"/Users/JohnnyTemp/Documents/kick-off/client/src/App.js",[],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/RoomChat.js",[],["54","55"],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/NavBar.js",["56","57"],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/Homepage.js",["58"],"import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Homepage.css\";\n\n///importing userContext\nimport UserContext from \"../context/UserContext\";\n\n///importing icons from react-icons after installation\nimport * as Bi from \"react-icons/bi\";\n// import { response } from 'express';\n\nexport default function Homepage() {\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState(\"\");\n\n    //User\n    const { setUserData } = useContext(UserContext);\n\n    //creating a history to redirect\n    const history = useHistory();\n\n    const usernameValue = (event) => {\n        setUsername(event.target.value);\n    };\n\n    const passwordValue = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n\n        try {\n            const loginUser = { username, password };\n            const loginResponse = await axios.post(\n                \"http://localhost:5000/api/user/login\",\n                loginUser\n            );\n\n            setUserData({\n                token: loginResponse.data.token,\n                user: loginResponse.data.user,\n            });\n\n            localStorage.setItem(\"auth-token\", loginResponse.data.token);\n\n            //login the user\n            console.log(loginResponse);\n            setPassword(\"\");\n            history.push(\"/room\");\n        } catch (error) {\n            console.log(error.response.data.msg);\n        }\n    };\n\n    return (\n        <div className=\"main-container homepage\">\n            <div className=\"homepage-top\">\n                <h3 className=\"\">\n                    Sharing Experiences, <br /> Safely.\n        </h3>\n                <div className=\"welcome-container\">\n                    <div className=\"card-body\">\n                        <h3 className=\"card-title\">Welcome!</h3>\n                        <form onSubmit={submitForm} className=\"form-group\">\n                            <input\n                                className=\"form-control\"\n                                onChange={usernameValue}\n                                type=\"text\"\n                                placeholder=\"Username\"\n                            />\n                            <input\n                                className=\"form-control\"\n                                onChange={passwordValue}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={password}\n                            />\n                            <div className=\"input-group row justify-content-around\">\n                                <a href=\"#\" className=\"create-new-acc-btn\">\n                                    Create New Account +\n                </a>\n\n                                <button type=\"submit\" className=\"wc-login-btn\">\n                                    Login <Bi.BiLogIn />{\" \"}\n                                </button>\n                            </div>\n                        </form>\n                        <Link id=\"fpLink\">Forgot Password </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"welcome-image-container\"></div>\n        </div>\n    );\n}\n","/Users/JohnnyTemp/Documents/kick-off/client/src/context/UserContext.js",[],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/CreateProfile.js",["59","60"],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/ProfileForm.js",["61","62","63"],"import React, { useEffect, useState } from 'react';\nimport api from '../utils/api';\n\nconst ProfileForm = () => {\n    const [foundInterests, setFoundInterests] = useState();\n    const [searchValue, setSearchValue] = useState('')\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        username: '',\n        password: '',\n        passwordMatch: '',\n        interests: []\n    })\n\n    const { firstName, lastName, email, username, password, passwordMatch } = formData\n\n    useEffect(() => {\n        async function updateComponent() {\n            try {\n            const res = await api.get(`/interest/${searchValue}`)\n            setFoundInterests(res.data)\n            } catch (err) {\n                console.log(err.message)\n            }\n        }\n        updateComponent();\n    }, [searchValue])\n\n    const onChange = e => {\n        e.preventDefault();\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const searchInterests = (e) => {\n        e.preventDefault();\n        setSearchValue(e.target.value);\n    }\n    const addInterest = (e, id) => {\n        e.preventDefault();\n        console.log(id)\n        setFormData({\n            ...formData,\n            interests: [...formData.interests, id]\n        })\n    }\n    return (\n        <div>\n             <form className='form' action=\"/register\" method='POST'>\n              <p id='register-error'>\n              </p>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"text\" placeholder='First Name' name='firstName' value={firstName} required onChange={onChange} />\n                <label htmlFor='firstName' className='form__label'>First Name</label>\n              </div>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"text\" placeholder='Last Name' name='lastName' value={lastName} required onChange={onChange} />\n                <label htmlFor='lastName' className='form__label'>Last Name</label>\n              </div>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"text\" placeholder='Username' name=\"username\" minLength=\"6\" value={username} required onChange={onChange} />\n                <label htmlFor='username' className='form__label'>Username</label>\n              </div>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"email\" placeholder='Email' name=\"email\" value={email} required onChange={onChange} />\n                <label htmlFor='email' className='form__label'>Email</label>\n              </div>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"password\" placeholder='Password' name=\"password\" minLength=\"6\" value={password} required onChange={onChange} />\n                <label htmlFor='password' className='form__label'>Password</label>\n              </div>\n              <div className=\"form__group\">\n                <input className='form__input' type=\"password\" placeholder='Retype Password' name=\"passwordMatch\" minLength=\"6\" value={passwordMatch} required onChange={onChange} />\n                <label htmlFor='password2' className='form__label'>Retype Password</label>\n              </div>\n                <input list=\"interests\" value={searchValue} onChange={searchInterests}/>\n                <datalist id=\"interests\" >\n                    {foundInterests && foundInterests.map( interest => {\n                        return <option id={interest._id} onClick={(e) => addInterest(e, interest.id)} >{`#${interest.tag}`}</option>\n                    })}\n                </datalist>  \n                <div className=\"modal-footer\">\n                  <button type=\"submit\"  className=\"btn btn-primary\">REGISTER</button>\n                </div>\n            </form>\n    </div>\n  )\n}\n\nexport default ProfileForm\n","/Users/JohnnyTemp/Documents/kick-off/client/src/utils/api.js",[],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/panels/KickoffPanel.js",["64","65","66","67"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport KickoffLink from \"../links/KickOffLink\";\nimport \"../../styles/KickoffPanel.css\";\n\n\nexport default function KickoffPanel() {\n    ////grabbing the users info (kickoffs)\n    const { userData, setUserData } = useContext(UserContext);\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div className=\"kickoff-side-panel\">\n            <h5>Your Kickoffs</h5>\n            <KickoffLink title=\"random-title1\" />\n            <KickoffLink title=\"random-title2\" />\n            <KickoffLink title=\"random-title3\" />\n            <KickoffLink title=\"random-title4\" />\n            <KickoffLink title=\"random-title5\" />\n            <KickoffLink title=\"random-title6\" />\n            <KickoffLink title=\"random-title7\" />\n            {\n                userData.user &&\n                <>\n                    {\n                        // this will iterate over the array of user kickoffs and if the array is empty, it will display a message that says: no kickoff are addded (yet)\n                        userData.user.createdKickoffs > 0 ?\n                            userData.user.createdKickoffs.map((kickoff) => {\n                                return < KickoffLink title={kickoff.title} />\n                            })\n                            :\n                            <p>\n                                You don't have any kickoffs\n                            </p>\n                    }\n                </>\n            }\n\n        </div >\n    )\n}\n","/Users/JohnnyTemp/Documents/kick-off/client/src/components/links/KickOffLink.js",[],"/Users/JohnnyTemp/Documents/kick-off/client/src/components/KickoffHub.js",["68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":21,"nodeType":"77","messageId":"78","endLine":9,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":28,"column":6,"nodeType":"81","endLine":28,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":81,"column":33,"nodeType":"85","endLine":81,"endColumn":76},{"ruleId":"75","severity":1,"message":"86","line":5,"column":12,"nodeType":"77","messageId":"78","endLine":5,"endColumn":20},{"ruleId":"75","severity":1,"message":"87","line":5,"column":22,"nodeType":"77","messageId":"78","endLine":5,"endColumn":33},{"ruleId":"75","severity":1,"message":"88","line":15,"column":10,"nodeType":"77","messageId":"78","endLine":15,"endColumn":24},{"ruleId":"75","severity":1,"message":"89","line":27,"column":9,"nodeType":"77","messageId":"78","endLine":27,"endColumn":24},{"ruleId":"75","severity":1,"message":"90","line":38,"column":9,"nodeType":"77","messageId":"78","endLine":38,"endColumn":20},{"ruleId":"75","severity":1,"message":"91","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"92","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"93","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":10,"column":23,"nodeType":"77","messageId":"78","endLine":10,"endColumn":34},{"ruleId":"75","severity":1,"message":"94","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":25,"column":7,"nodeType":"97","messageId":"98","endLine":34,"endColumn":8},{"ruleId":"95","severity":1,"message":"96","line":40,"column":7,"nodeType":"97","messageId":"98","endLine":49,"endColumn":8},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'redirectToDashboard' and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["101"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'foundInterests' is assigned a value but never used.","'searchInterests' is assigned a value but never used.","'addInterest' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'message' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [redirectToDashboard, userData]",{"range":"104","text":"105"},[638,640],"[redirectToDashboard, userData]"]